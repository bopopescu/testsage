#!/usr/bin/env bash
###########################################
## Readline 5.2
###########################################

if [ "$SAGE_LOCAL" = "" ]; then
   echo "SAGE_LOCAL undefined ... exiting";
   echo "Maybe run 'sage -sh'?"
   exit 1
fi

if [ `uname` = "Darwin" -a "$SAGE64" = "yes" ]; then
   echo "Building 64 bit OSX version of Sage"
   CFLAGS="-O2 -g -m64 " && export CFLAGS
   LDFLAGS="-m64"
fi

echo "Deleting old readline headers and libs"
rm -rf $SAGE_LOCAL/include/readline/
rm -rf $SAGE_LOCAL/lib/libreadline.*

OVERWRITE_READLINE=false; export OVERWRITE_READLINE

# First we check for OpenSUSE 11.1 since bash is linked dynamically with a
# readline that breaks when we build Sage's readline, so we work around this
# for now
if [ `grep 11.1 /etc/SuSE-release > /dev/null; echo $?` == 0 ]; then
    echo "OpenSUSE 11.1 detected"
    if [ -d /usr/include/readline/ ]; then
        echo "The development version of libreadline is installed -> copying"
        if [ `uname -p` = "x86_64" ]; then
            cp /lib64/libreadline.so.* $SAGE_LOCAL/lib
        else
            cp /lib/libreadline.so.* $SAGE_LOCAL/lib
        fi
        cp -r /usr/include/readline  $SAGE_LOCAL/include
        exit 0
    else
        echo "No headers found, building library"
        OVERWRITE_READLINE="true"; export OVERWRITE_READLINE
    fi
fi

cd src/

build()
{
    ./configure --prefix=$SAGE_LOCAL
    if [ `uname` == 'Darwin' ]; then
      if [ `uname -r | awk -F. '{ print $1; }'` == '9' ]; then
	echo "Fixing Makefile for OSX 10.5 compatibility"
	sed -e 's/-dynamic/-dynamiclib/' shlib/Makefile > shlib/Makefile.ok
	mv shlib/Makefile.ok shlib/Makefile
      fi
    fi
    make install
}

build

if [ $? -ne 0 ]; then
    echo "Error building and installing readline."
    exit 1
fi

if [ $UNAME = "Darwin" ]; then
  DYLIB_NAME=$SAGE_LOCAL/lib/libreadline.dylib
elif [ $UNAME = "CYGWIN" ]; then
  # It is of course very lame that readline names the file .dll.a, but that's what it does.
  DYLIB_NAME=$SAGE_LOCAL/lib/libreadline.dll.a
elif [ "$UNAME" = "OpenBSD" ]; then
  DYLIB_NAME=$SAGE_LOCAL/lib/libreadline.so.5.2
else
  DYLIB_NAME=$SAGE_LOCAL/lib/libreadline.so
fi

if [ $OVERWRITE_READLINE == "true" ]; then
  echo "Overwriting libreadline.so.5.2 with the system one"
  rm -f $SAGE_LOCAL/lib/libreadline.so.5.2
  if [ `uname -p` = "x86_64" ]; then
    cp /lib64/libreadline.so.5.2 $SAGE_LOCAL/lib
  else
    cp /lib/libreadline.so.5.2 $SAGE_LOCAL/lib
   fi
fi

# Make sure that the install worked, despite whatever the error
# code of build was.
if [ -f $DYLIB_NAME -a -f $SAGE_LOCAL/lib/libreadline.a ]; then
  # Fix permissions.
  chmod 755 $SAGE_LOCAL/lib/libreadline.*
  chmod 755 $SAGE_LOCAL/lib/libhistory.*
  exit 0
else
  echo "Readline's build claims to have finished, but files that should have been built weren't."
  exit 1
fi
