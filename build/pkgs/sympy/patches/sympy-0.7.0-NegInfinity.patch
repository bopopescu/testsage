--- sympy/core/numbers.py.orig	2011-06-23 13:07:50.000000000 +1200
+++ sympy/core/numbers.py	2011-07-01 13:26:27.918256886 +1200
@@ -887,8 +887,6 @@
 
     def _sage_(self):
         import sage.all as sage
-        #XXX: fixme, this should work:
-        #return sage.Integer(self[0])/sage.Integer(self[1])
         return sage.Integer(self.p)/sage.Integer(self.q)
 
 # int -> Integer
@@ -1551,6 +1549,10 @@
     def _as_mpf_val(self, prec):
         return mlib.fninf
 
+    def _sage_(self):
+        import sage.all as sage
+        return -(sage.oo)
+
     def __gt__(a, b):
         return False
 
@@ -1567,7 +1569,6 @@
     def __le__(a, b):
         return True
 
-
 class NaN(RationalConstant):
     __metaclass__ = Singleton
 
--- sympy/external/tests/test_sage.py.orig	2011-06-28 11:56:45.000000000 +1200
+++ sympy/external/tests/test_sage.py	2011-07-01 13:26:58.668291571 +1200
@@ -96,6 +96,8 @@
 def test_oo():
     assert sympy.sympify(sage.oo) == sympy.oo
     assert sage.oo == sage.SR(sympy.oo)
+    assert sympy.sympify(-sage.oo) == -sympy.oo
+    assert -sage.oo == sage.SR(-sympy.oo)
 
 def test_NaN():
     assert sympy.sympify(sage.NaN) == sympy.nan
